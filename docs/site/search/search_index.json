{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Power Distrubution Platform What we have done We been developing a Restful API for data about electricity production, consumption and the market. Se more hands information on one the differernet topcis: About the project and what the goal was. API Design Explains the design of the API and the system in general. API Interfaces Shows an interactive view of the API interfaces and their uses. Deployment Explain the working process of the project and the different version of the system.","title":"Home"},{"location":"#what-we-have-done","text":"We been developing a Restful API for data about electricity production, consumption and the market. Se more hands information on one the differernet topcis: About the project and what the goal was. API Design Explains the design of the API and the system in general. API Interfaces Shows an interactive view of the API interfaces and their uses. Deployment Explain the working process of the project and the different version of the system.","title":"What we have done"},{"location":"about/","text":"About the Project An explanation of the proposed assignment project before the we present the project results. Assignment The developed website and api is for the course M7011E at LTU. It a project course where we are supposed to learn more about dynamic webb development using existing knowledge and industri standrad. We had different topics that were graduated, being more explained below, but the most important part was the learning process and taking advantage of the industry standard to build on our existing knowledge. API For the development of the API we were specified to provide a specific standard. We choosed to used Restful API and document it with swagger. We would also convey a more graphic sketch of the intended system and how it was should to work. See more detailed information about the API on the next page. Logic The project were supposed to provide a simulator for the data that we could build the website and API upon. This data were to be based on a loop of a simpler engine that illustrates the real world infrastructure of a energy production. Authentication Authentication service would be provided in the project through a third party or integrated in the service. Data The project were to specify a model, both specification, sketch and documentation, to the use of data, e.g with a database or provided through API Users Build a web app that the user / prosumers can use and control their facility. It were to contain all the necessary functions for a user experience and the control options that seems appropriate for the usage. Admin Extra functionalities for the managers of the systemet eg. the ability to control prosumers, see extra data points and monitor them. Documentation Make a report of the provided system and the intended system design and functionalities. Presentation A presentation of the system for course coordinators and classmates. Deployment Deploy the website and system on a public VPS where the course coordinators can view the prodject live in simulation.","title":"About"},{"location":"about/#about-the-project","text":"An explanation of the proposed assignment project before the we present the project results.","title":"About the Project"},{"location":"about/#assignment","text":"The developed website and api is for the course M7011E at LTU. It a project course where we are supposed to learn more about dynamic webb development using existing knowledge and industri standrad. We had different topics that were graduated, being more explained below, but the most important part was the learning process and taking advantage of the industry standard to build on our existing knowledge.","title":"Assignment"},{"location":"about/#api","text":"For the development of the API we were specified to provide a specific standard. We choosed to used Restful API and document it with swagger. We would also convey a more graphic sketch of the intended system and how it was should to work. See more detailed information about the API on the next page.","title":"API"},{"location":"about/#logic","text":"The project were supposed to provide a simulator for the data that we could build the website and API upon. This data were to be based on a loop of a simpler engine that illustrates the real world infrastructure of a energy production.","title":"Logic"},{"location":"about/#authentication","text":"Authentication service would be provided in the project through a third party or integrated in the service.","title":"Authentication"},{"location":"about/#data","text":"The project were to specify a model, both specification, sketch and documentation, to the use of data, e.g with a database or provided through API","title":"Data"},{"location":"about/#users","text":"Build a web app that the user / prosumers can use and control their facility. It were to contain all the necessary functions for a user experience and the control options that seems appropriate for the usage.","title":"Users"},{"location":"about/#admin","text":"Extra functionalities for the managers of the systemet eg. the ability to control prosumers, see extra data points and monitor them.","title":"Admin"},{"location":"about/#documentation","text":"Make a report of the provided system and the intended system design and functionalities.","title":"Documentation"},{"location":"about/#presentation","text":"A presentation of the system for course coordinators and classmates.","title":"Presentation"},{"location":"about/#deployment","text":"Deploy the website and system on a public VPS where the course coordinators can view the prodject live in simulation.","title":"Deployment"},{"location":"api-docs/","text":"API Design The API is structured to have three interfaces in total, two GET interfaces for regular users and one POST for developers. The two GET interfaces are for anyone who wants to make use of our webservice be it regular users or developers of other systems by retriving relevant general or userdata see API interfaces . The server is ran on Apache2 and uses a singular MySQL database for large time-stamped datasets of buffers, prices and windspeeds. A simulator is ran on an external host which on a timed regular basis sends updates via the POST interface to the webserver which triggers updates the current buffer size and market price based on wind speed, and the supply and demand of every user on the platform. Since the calculations for the new values happens when the server reacts to an update, no internal program is constantly running on the server and it sole purpose is to host the database and files making up the website. In a real life situation the data comes from the infrastructure eg. wind turbines, solarceller, coal and oil productions etc. Both from electricity companies but also from the prosumers own productions and facilities. The design of our system can be seen in the sketch See Swagger documentation for avaible interfaces and examples.","title":"API Design"},{"location":"api-docs/#api-design","text":"The API is structured to have three interfaces in total, two GET interfaces for regular users and one POST for developers. The two GET interfaces are for anyone who wants to make use of our webservice be it regular users or developers of other systems by retriving relevant general or userdata see API interfaces . The server is ran on Apache2 and uses a singular MySQL database for large time-stamped datasets of buffers, prices and windspeeds. A simulator is ran on an external host which on a timed regular basis sends updates via the POST interface to the webserver which triggers updates the current buffer size and market price based on wind speed, and the supply and demand of every user on the platform. Since the calculations for the new values happens when the server reacts to an update, no internal program is constantly running on the server and it sole purpose is to host the database and files making up the website. In a real life situation the data comes from the infrastructure eg. wind turbines, solarceller, coal and oil productions etc. Both from electricity companies but also from the prosumers own productions and facilities. The design of our system can be seen in the sketch See Swagger documentation for avaible interfaces and examples.","title":"API Design"},{"location":"deployment/","text":"Versions The different versions have been collected as milestones for what we have reached during the development process. A full list of every commit can be seen on github or the commit log Version Date Function Comment approximate time (hours) 1.2 January 11 2022 Additional security, docs and general fixes Encrypted token check on simulator updates. More work on documentation and general fixes mosty based on the new file structure 6 1.1 January 5 2022 Docs, API, security & directory update Initial documentation. API interface for retriving user-specific data not just general data. Use of encrypted passwords to access user data. Overhaul of file structure. 14 1.0 December 27 2021 Readme, QOL fixes Feature complete. Initial README. Small QOL fixes include changing only password, more information on userpage & second ratio for market buying 8 0.9 December 14 2021 Price logic, coal plant and more charts More charts to display user consumtion/production relative to entire userbase. Price now based on avaible buffer and wind speed. Seperate coal powerplant for admins to manipulate. 13 0.8 December 6 2021 Data charts Pretty charts to display buffer/price and wind history charts 7 0.7 November 29 2021 Blocking feature and expanded design Added a blocking users feature to admins to lock users from the market and site. Userlist showing whos online, and other small design changes 8 0.6 November 23 2021 Admin page, profile pictures & settings, GET interface The addition of an admin only page with the power to edit and delete users. The ability to upload and display a profile picture. A user settings page and drop-down menu for the navbar. The first access point to the service, returning json formated data of total buffer size and current price 16 0.5 November 18 2021 Simulator and post interface Simulator for random wind speeds and regular buffer and price updates was added. Also several fixes regarding user profiles 10 0.4.1 November 15 2021 Expanded userpage Expanded the design of userpage with tables and more information like user buffer size and ratios 6 0.4 November 12 2021 Userpage Implemented a userpage displaying basic data about production and consumption 8 0.3 November 11 2021 Navbar, sessions & consumption Initial navbar implemented. User sessions across site vists enabled and start of keeping track/changing users consumption 14 0.2 November 8 2021 Wind speed API Enabled retriving windspeed from external API (Vindkraftsstatisik) and expanded login page. Wind api was replaced (but still functional) in favor of simulating random values 7 0.1.1 November 5 2021 Login & admin Initial database communication logic. Expanded db schema with login feature and admin flags. Initial login page 6 0.1 November 4 2021 Web Design & DB First concrete development. Initial DB setup, index and basic design 8 0.0 < November 4 2021 Design decisions Theoritcal design and development decisions. Choice of system structure and tools to be used 10 In the development of the system and API we have committed 127 different updates in ~140 working hours.","title":"Deployment"},{"location":"deployment/#versions","text":"The different versions have been collected as milestones for what we have reached during the development process. A full list of every commit can be seen on github or the commit log Version Date Function Comment approximate time (hours) 1.2 January 11 2022 Additional security, docs and general fixes Encrypted token check on simulator updates. More work on documentation and general fixes mosty based on the new file structure 6 1.1 January 5 2022 Docs, API, security & directory update Initial documentation. API interface for retriving user-specific data not just general data. Use of encrypted passwords to access user data. Overhaul of file structure. 14 1.0 December 27 2021 Readme, QOL fixes Feature complete. Initial README. Small QOL fixes include changing only password, more information on userpage & second ratio for market buying 8 0.9 December 14 2021 Price logic, coal plant and more charts More charts to display user consumtion/production relative to entire userbase. Price now based on avaible buffer and wind speed. Seperate coal powerplant for admins to manipulate. 13 0.8 December 6 2021 Data charts Pretty charts to display buffer/price and wind history charts 7 0.7 November 29 2021 Blocking feature and expanded design Added a blocking users feature to admins to lock users from the market and site. Userlist showing whos online, and other small design changes 8 0.6 November 23 2021 Admin page, profile pictures & settings, GET interface The addition of an admin only page with the power to edit and delete users. The ability to upload and display a profile picture. A user settings page and drop-down menu for the navbar. The first access point to the service, returning json formated data of total buffer size and current price 16 0.5 November 18 2021 Simulator and post interface Simulator for random wind speeds and regular buffer and price updates was added. Also several fixes regarding user profiles 10 0.4.1 November 15 2021 Expanded userpage Expanded the design of userpage with tables and more information like user buffer size and ratios 6 0.4 November 12 2021 Userpage Implemented a userpage displaying basic data about production and consumption 8 0.3 November 11 2021 Navbar, sessions & consumption Initial navbar implemented. User sessions across site vists enabled and start of keeping track/changing users consumption 14 0.2 November 8 2021 Wind speed API Enabled retriving windspeed from external API (Vindkraftsstatisik) and expanded login page. Wind api was replaced (but still functional) in favor of simulating random values 7 0.1.1 November 5 2021 Login & admin Initial database communication logic. Expanded db schema with login feature and admin flags. Initial login page 6 0.1 November 4 2021 Web Design & DB First concrete development. Initial DB setup, index and basic design 8 0.0 < November 4 2021 Design decisions Theoritcal design and development decisions. Choice of system structure and tools to be used 10 In the development of the system and API we have committed 127 different updates in ~140 working hours.","title":"Versions"}]}